/*
*The idea of this that users only need to edit this one place inorder to add in their new modes.
*/
int modeCount = 2;
Mode* modes*;

/**
*This is where all of the modes will converge so that this is one of the few files that will need to be eddited inorder to add in a new modeCount
* Mode structs will only be created when initialy requested. This is to make sure users only have to edit one place to add in new modes 
*/
Mode* getModeFromSelection(int modeNumber){
    switch(modeNumber){
        case 0:
            if(modes[0] == NULL){
                modes[0] = DStarLoad();
            }
            return modes[0];
            break;
        case 1:
            if(modes[1] == NULL){
                modes[1] = NormalLoad();
            }
            return modes[1];
            break;
        default:
            return NULL;
            break;
    }
}

/*
* Creates the array to hold all of the modes
*/
void initiateModeList(){
    modes = malloc(sizeOf(Mode)*modeCount);
}

/*
* Frees all of the mode structts and the array
*/
void freeModes(){
    for(int i = 0; i<=modeCount;i++){
        if(modes[i] != null){
            modes[i].free();
        }
    }//end for
    free(modes)
}